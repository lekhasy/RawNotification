#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Demo_LoginServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKH")]
	public partial class LoginDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConNguoi(ConNguoi instance);
    partial void UpdateConNguoi(ConNguoi instance);
    partial void DeleteConNguoi(ConNguoi instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiCuocGoi(LoaiCuocGoi instance);
    partial void UpdateLoaiCuocGoi(LoaiCuocGoi instance);
    partial void DeleteLoaiCuocGoi(LoaiCuocGoi instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    #endregion
		
		public LoginDBDataContext() : 
				base(global::Demo_LoginServer.Properties.Settings.Default.QLKHConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LoginDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoginDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoginDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LoginDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ConNguoi> ConNguois
		{
			get
			{
				return this.GetTable<ConNguoi>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiCuocGoi> LoaiCuocGois
		{
			get
			{
				return this.GetTable<LoaiCuocGoi>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConNguoi")]
	public partial class ConNguoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConNguoiID;
		
		private string _CMND;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _Phone;
		
		private string _Phone2;
		
		private string _Email;
		
		private string _MatKhau;
		
		private EntitySet<KhachHang> _KhachHangs;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConNguoiIDChanging(int value);
    partial void OnConNguoiIDChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public ConNguoi()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConNguoiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ConNguoiID
		{
			get
			{
				return this._ConNguoiID;
			}
			set
			{
				if ((this._ConNguoiID != value))
				{
					this.OnConNguoiIDChanging(value);
					this.SendPropertyChanging();
					this._ConNguoiID = value;
					this.SendPropertyChanged("ConNguoiID");
					this.OnConNguoiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(12)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="VarChar(15)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(32)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConNguoi_KhachHang", Storage="_KhachHangs", ThisKey="ConNguoiID", OtherKey="ConNguoiID")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConNguoi_NhanVien", Storage="_NhanViens", ThisKey="ConNguoiID", OtherKey="ConNguoiID")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.ConNguoi = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.ConNguoi = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ConNguoi = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.ConNguoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KhachHangID;
		
		private System.Nullable<int> _TongGTGiaoDich;
		
		private int _ConNguoiID;
		
		private System.Nullable<int> _LoaiKhachHangID;
		
		private EntityRef<ConNguoi> _ConNguoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKhachHangIDChanging(int value);
    partial void OnKhachHangIDChanged();
    partial void OnTongGTGiaoDichChanging(System.Nullable<int> value);
    partial void OnTongGTGiaoDichChanged();
    partial void OnConNguoiIDChanging(int value);
    partial void OnConNguoiIDChanged();
    partial void OnLoaiKhachHangIDChanging(System.Nullable<int> value);
    partial void OnLoaiKhachHangIDChanged();
    #endregion
		
		public KhachHang()
		{
			this._ConNguoi = default(EntityRef<ConNguoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhachHangID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KhachHangID
		{
			get
			{
				return this._KhachHangID;
			}
			set
			{
				if ((this._KhachHangID != value))
				{
					this.OnKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._KhachHangID = value;
					this.SendPropertyChanged("KhachHangID");
					this.OnKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongGTGiaoDich", DbType="Int")]
		public System.Nullable<int> TongGTGiaoDich
		{
			get
			{
				return this._TongGTGiaoDich;
			}
			set
			{
				if ((this._TongGTGiaoDich != value))
				{
					this.OnTongGTGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._TongGTGiaoDich = value;
					this.SendPropertyChanged("TongGTGiaoDich");
					this.OnTongGTGiaoDichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConNguoiID", DbType="Int NOT NULL")]
		public int ConNguoiID
		{
			get
			{
				return this._ConNguoiID;
			}
			set
			{
				if ((this._ConNguoiID != value))
				{
					if (this._ConNguoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConNguoiIDChanging(value);
					this.SendPropertyChanging();
					this._ConNguoiID = value;
					this.SendPropertyChanged("ConNguoiID");
					this.OnConNguoiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiKhachHangID", DbType="Int")]
		public System.Nullable<int> LoaiKhachHangID
		{
			get
			{
				return this._LoaiKhachHangID;
			}
			set
			{
				if ((this._LoaiKhachHangID != value))
				{
					this.OnLoaiKhachHangIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiKhachHangID = value;
					this.SendPropertyChanged("LoaiKhachHangID");
					this.OnLoaiKhachHangIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConNguoi_KhachHang", Storage="_ConNguoi", ThisKey="ConNguoiID", OtherKey="ConNguoiID", IsForeignKey=true)]
		public ConNguoi ConNguoi
		{
			get
			{
				return this._ConNguoi.Entity;
			}
			set
			{
				ConNguoi previousValue = this._ConNguoi.Entity;
				if (((previousValue != value) 
							|| (this._ConNguoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConNguoi.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._ConNguoi.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._ConNguoiID = value.ConNguoiID;
					}
					else
					{
						this._ConNguoiID = default(int);
					}
					this.SendPropertyChanged("ConNguoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiCuocGoi")]
	public partial class LoaiCuocGoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoaiCuocGoiID;
		
		private string _TenLoaiCuocGoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoaiCuocGoiIDChanging(int value);
    partial void OnLoaiCuocGoiIDChanged();
    partial void OnTenLoaiCuocGoiChanging(string value);
    partial void OnTenLoaiCuocGoiChanged();
    #endregion
		
		public LoaiCuocGoi()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiCuocGoiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoaiCuocGoiID
		{
			get
			{
				return this._LoaiCuocGoiID;
			}
			set
			{
				if ((this._LoaiCuocGoiID != value))
				{
					this.OnLoaiCuocGoiIDChanging(value);
					this.SendPropertyChanging();
					this._LoaiCuocGoiID = value;
					this.SendPropertyChanged("LoaiCuocGoiID");
					this.OnLoaiCuocGoiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiCuocGoi", DbType="NVarChar(50)")]
		public string TenLoaiCuocGoi
		{
			get
			{
				return this._TenLoaiCuocGoi;
			}
			set
			{
				if ((this._TenLoaiCuocGoi != value))
				{
					this.OnTenLoaiCuocGoiChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiCuocGoi = value;
					this.SendPropertyChanged("TenLoaiCuocGoi");
					this.OnTenLoaiCuocGoiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NhanVienID;
		
		private int _ConNguoiID;
		
		private EntityRef<ConNguoi> _ConNguoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNhanVienIDChanging(int value);
    partial void OnNhanVienIDChanged();
    partial void OnConNguoiIDChanging(int value);
    partial void OnConNguoiIDChanged();
    #endregion
		
		public NhanVien()
		{
			this._ConNguoi = default(EntityRef<ConNguoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVienID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NhanVienID
		{
			get
			{
				return this._NhanVienID;
			}
			set
			{
				if ((this._NhanVienID != value))
				{
					this.OnNhanVienIDChanging(value);
					this.SendPropertyChanging();
					this._NhanVienID = value;
					this.SendPropertyChanged("NhanVienID");
					this.OnNhanVienIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConNguoiID", DbType="Int NOT NULL")]
		public int ConNguoiID
		{
			get
			{
				return this._ConNguoiID;
			}
			set
			{
				if ((this._ConNguoiID != value))
				{
					if (this._ConNguoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConNguoiIDChanging(value);
					this.SendPropertyChanging();
					this._ConNguoiID = value;
					this.SendPropertyChanged("ConNguoiID");
					this.OnConNguoiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConNguoi_NhanVien", Storage="_ConNguoi", ThisKey="ConNguoiID", OtherKey="ConNguoiID", IsForeignKey=true)]
		public ConNguoi ConNguoi
		{
			get
			{
				return this._ConNguoi.Entity;
			}
			set
			{
				ConNguoi previousValue = this._ConNguoi.Entity;
				if (((previousValue != value) 
							|| (this._ConNguoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConNguoi.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._ConNguoi.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._ConNguoiID = value.ConNguoiID;
					}
					else
					{
						this._ConNguoiID = default(int);
					}
					this.SendPropertyChanged("ConNguoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
